"""
Django settings for Priveasy project.

Generated by 'django-admin startproject' using Django 3.1b1.

For more information on this file, see
https://docs.djangoproject.com/en/dev/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/dev/ref/settings/
"""

from pathlib import Path
import environ

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve(strict=True).parent.parent.parent

# Read the .env file:
env = environ.Env()
environ.Env.read_env()

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/dev/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [
    '.p5.vc',
    '.priveasy.org',
    '.priveasy6qxoehbhq5nxcxv35y6el73hpzpda7wgtnfe5qaspemtl6qd.onion',
]


# Application definition

INSTALLED_APPS = [
    'mainSite.apps.MainsiteConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'kronos',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'Priveasy.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'Priveasy.wsgi.application'


# Databases
# https://docs.djangoproject.com/en/dev/ref/settings/#databases

DATABASE_ROUTERS = ['Priveasy.databaseRouter.Router']

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'priveasydb',
        'USER': 'priveasyuser',
        'PASSWORD': env('DATABASE_PASSWORD'),
        'HOST': env('BASE_DATABASE_HOST'),
        'PORT': env('DATABASE_PORT'),
        'OPTIONS': {
            'sslmode': 'require'
        }
    },
    'duplicate': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'priveasydb',
        'USER': 'priveasyuser',
        'PASSWORD': env('DATABASE_PASSWORD'),
        'HOST': env('DUPLICATE_DATABASE_HOST'),
        'PORT': env('DATABASE_PORT'),
        'OPTIONS': {
            'sslmode': 'require'
        }
    }
}


# Password validation
# https://docs.djangoproject.com/en/dev/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
        'OPTIONS':
        {
            'min_length': 12,
        }
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

PASSWORD_HASHERS = [
    'django.contrib.auth.hashers.Argon2PasswordHasher',
    'django.contrib.auth.hashers.PBKDF2PasswordHasher',
]


# Internationalization
# https://docs.djangoproject.com/en/dev/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/dev/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = Path(BASE_DIR , 'static/')


###########################################################


# Management
ADMINS = [('Noah' , 'Admin@Priveasy.org')]
MANAGERS = (('Noah' , 'Admin@Priveasy.org'))

# Email
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'localhost'
EMAIL_PORT = 25
EMAIL_HOST_USER = ''
EMAIL_HOST_PASSWORD = ''
EMAIL_USE_TLS = True
DEFAULT_FROM_EMAIL = 'Priveasy <server@noreply.priveasy.org>'

# Security Settings
SECURE_HSTS_SECONDS = 15552000
SECURE_CONTENT_TYPE_NOSNIFF = True
SECURE_SSL_REDIRECT = True
SESSION_COOKIE_SECURE = True
CSRF_COOKIE_SECURE = True
X_FRAME_OPTIONS = 'DENY'
SECURE_HSTS_INCLUDE_SUBDOMAINS = True
SECURE_BROWSER_XSS_FILTER = True
SECURE_HSTS_PRELOAD = True
SECURE_REFERRER_POLICY = 'same-origin'

# Login Options
LOGIN_REDIRECT_URL = 'account'
LOGIN_URL = '/#Login'
LOGOUT_URL = 'logout'
PASSWORD_RESET_TIMEOUT = 10800

# Celery
CELERY_TASK_SOFT_TIME_LIMIT = 3540
CELERY_TASK_TIME_LIMIT = 3600

# Zcash

# Zcash Wallet Encryption Key:
ZCASH_WALLET_ENCRYPTION_KEY = env('ZCASH_WALLET_ENCRYPTION_KEY').encode('utf-8')

# Final, hardware address to send received payments to:
PRIVEASY_ZCASH_ADDRESS = b't1VXoLAYQU8EzSzVYTJSL6pqWkLshpazDCa'

# Tor
HOST_SCHEME_ALWAYS_HTTPS = ['priveasy6qxoehbhq5nxcxv35y6el73hpzpda7wgtnfe5qaspemtl6qd.onion']

# Twilio
twilioAccountSID = env('TWILIO_ACCOUNT_SID')
twilioAuthToken = env('TWILIO_AUTH_TOKEN')

# Stripe
stripeAPIKey = env('STRIPE_API_KEY')

# Server Generation
serverGeneration = env('SERVER_GENERATION')
