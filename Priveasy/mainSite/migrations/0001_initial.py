# Generated by Django 3.1 on 2020-08-12 18:47

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import mainSite.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AccountContents',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accountCreated', models.DateTimeField(auto_now_add=True, verbose_name='Account created')),
                ('accountLastUpdated', models.DateTimeField(auto_now=True, verbose_name='Account last updated')),
                ('planType', models.IntegerField(default=0, verbose_name='Plan number')),
                ('planExpiration', models.IntegerField(default=0, verbose_name='Plan expiration')),
                ('autoRenew', models.BooleanField(default=False, verbose_name='Auto renew enabled')),
                ('longRenew', models.BooleanField(default=False, verbose_name='Renew for six months')),
                ('stripeID', models.CharField(blank=True, max_length=36, verbose_name='Stripe customer ID')),
                ('emailsRemaining', models.IntegerField(default=0, verbose_name='Emails remaining')),
                ('textsRemaining', models.IntegerField(default=0, verbose_name='Texts remaining')),
                ('refCodeUsed', models.BooleanField(default=False, verbose_name='A referral code has been used')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Discount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(default=mainSite.models.Discount.createCouponCode, max_length=64, verbose_name='Discount code')),
                ('message', models.TextField(default="Hello,\nThank you so much for using a discount code at checkout! We're just sending you this quick email to let you know that it was successfully applied. Have a nice day!\n- Priveasy's Friendly Server Bot", max_length=10000, verbose_name='Emailed success message')),
                ('timeAdded', models.IntegerField(default=0, verbose_name='Amount of time to add to current plan')),
                ('expiration', models.IntegerField(default=0, verbose_name='Discount code expiration')),
                ('timesUsed', models.IntegerField(default=0, verbose_name='Number of times used')),
            ],
        ),
        migrations.CreateModel(
            name='EmailUsers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sendTo', models.CharField(default='Admin@Priveasy.org', max_length=500, verbose_name='Recipient (if more than one, separate with a single space)')),
                ('sentFrom', models.CharField(default='Server@NoReply.Priveasy.org', max_length=500, verbose_name='Email address to send from')),
                ('subject', models.CharField(default='An Email From Priveasy', max_length=500, verbose_name='Email subject')),
                ('message', models.TextField(blank=True, default="Hello,\nI just wanted to reach out and quickly say thank you for using Priveasy! I really appreciate you!\n- Priveasy's Friendly Server Bot", max_length=10000, verbose_name='Email Message')),
                ('standardNotificationTemplate', models.BooleanField(default=False, verbose_name='Use standard, HTML, notification template')),
                ('autoBCC', models.BooleanField(default=True, verbose_name='Automatically BCC multiple "to" addresses')),
                ('sendToVPNUsers', models.BooleanField(default=False, verbose_name='Automatically send email to all VPN users')),
                ('sendToAllUsers', models.BooleanField(default=False, verbose_name='Automatically send email to all users')),
            ],
        ),
        migrations.CreateModel(
            name='Stats',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('homeViews', models.IntegerField(default=0, verbose_name='Number of times the home page was viewed')),
                ('accountViews', models.IntegerField(default=0, verbose_name='Number of times an account page was viewed')),
                ('termsViews', models.IntegerField(default=0, verbose_name='Number of times the Terms were viewed')),
                ('privacyPolicyViews', models.IntegerField(default=0, verbose_name='Number of times the Privacy Policy was viewed')),
                ('cryptoPageViews', models.IntegerField(default=0, verbose_name='Number of times the cryptocurrency purchase page was viewed')),
                ('purchasePageViews', models.IntegerField(default=0, verbose_name='Number of times the purchase page was viewed')),
                ('publicPasteViews', models.IntegerField(default=0, verbose_name='Number of times a public paste was successfully viewed')),
                ('shortenedURLClicks', models.IntegerField(default=0, verbose_name='Number of times a shortened URL was clicked')),
                ('vpnDownloads', models.IntegerField(default=0, verbose_name='Number of times a VPN profile was downloaded')),
                ('shadowsocksViews', models.IntegerField(default=0, verbose_name='Number of times shadowsocks connection info was viewed')),
                ('priveasy404Views', models.IntegerField(default=0, verbose_name='Number of times a 404 page was intentionally displayed for Priveasy.org')),
                ('p5vc404Views', models.IntegerField(default=0, verbose_name='Number of times a 404 page was intentionally displayed for P5.vc')),
            ],
        ),
        migrations.CreateModel(
            name='VPNServer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serverID', models.CharField(default=mainSite.models.VPNServer.createServerID, max_length=14, verbose_name='Server ID')),
                ('serverType', models.IntegerField(default=0, verbose_name='Server type')),
                ('serverIP', models.GenericIPAddressField(verbose_name='Server IP address')),
            ],
        ),
        migrations.CreateModel(
            name='ZcashPaymentAddresses',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('requested', models.BooleanField(default=False, verbose_name='Addresses Requested')),
                ('generated', models.BooleanField(default=False, verbose_name='Addresses Generated')),
                ('shieldedAddress', models.CharField(blank=True, max_length=100, verbose_name='Zcash Shielded Payment Address')),
                ('transparentAddress', models.CharField(blank=True, max_length=50, verbose_name='Zcash Transparent Payment Address')),
                ('account', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='mainSite.accountcontents')),
            ],
        ),
        migrations.CreateModel(
            name='VPNProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vpnUsername', models.CharField(default=mainSite.models.VPNProfile.createUsername, max_length=14, verbose_name='VPN username')),
                ('vpnProfileNum', models.IntegerField(default=0, verbose_name='VPN profile number')),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainSite.accountcontents')),
                ('server', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='mainSite.vpnserver')),
            ],
        ),
        migrations.CreateModel(
            name='ShortenedURL',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('destinationURL', models.URLField(max_length=2000, verbose_name='Destination URL')),
                ('slug', models.CharField(default=mainSite.models.ShortenedURL.generateURL, max_length=6, verbose_name='URL slug')),
                ('clicks', models.IntegerField(default=0, verbose_name='Number of clicks')),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainSite.accountcontents')),
            ],
        ),
        migrations.CreateModel(
            name='ReferralCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(default=mainSite.models.ReferralCode.createReferralCode, max_length=12, verbose_name='Referral code')),
                ('account', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='mainSite.accountcontents')),
            ],
        ),
        migrations.CreateModel(
            name='Paste',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pasteID', models.CharField(default=mainSite.models.Paste.createPasteID, max_length=10, verbose_name='Paste ID')),
                ('public', models.BooleanField(default=False, verbose_name='Paste is public')),
                ('contents', models.TextField(blank=True, max_length=1000000, verbose_name='Paste contents')),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainSite.accountcontents')),
            ],
        ),
        migrations.CreateModel(
            name='EmailForwarder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('verified', models.BooleanField(default=False, verbose_name='Email has been verified')),
                ('verifID', models.CharField(default=mainSite.models.EmailForwarder.createVerifID, max_length=36, verbose_name='Verification String')),
                ('forwarder', models.EmailField(default=mainSite.models.EmailForwarder.generateForwarder, max_length=254, verbose_name='Email forwarder')),
                ('forwardTo', models.EmailField(blank=True, max_length=254, verbose_name='Forward to')),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainSite.accountcontents')),
            ],
        ),
    ]
